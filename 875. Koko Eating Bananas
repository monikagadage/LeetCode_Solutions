class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        
        int low = 1;
        int high = 0;
        
        
        for(int i = 0 ; i< piles.size(); i ++){
            high = max(high, piles[i]);     
        }
        int result= high;
        while(low<=high){
            int mid = low+(high-low)/2;
            long total = 0;
            for(int i = 0 ; i< piles.size(); i ++){
               total+=ceil((double) piles[i] / mid);
            }
            if(total <= h){
                high = mid-1;
                result = min(result, mid);
            }
            else if(total > h){
                low = mid+1;
            }    
            
        }
        
        return result;
        
    }
};
